{"ast":null,"code":"var _jsxFileName = \"/Users/darshit/Documents/projects/ecom/frontend/src/screens/UserEditScreen.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation, useParams } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { FormContainer } from '../components/FormContainer';\nimport { register } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterScreen = () => {\n  _s();\n  const userId = useParams();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const navigate = useNavigate();\n  useEffect(() => {}, []);\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter your Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterScreen, \"zdlWw5tUtOt2yOj8v9iYGdOKr64=\", false, function () {\n  return [useParams, useDispatch, useSelector, useNavigate];\n});\n_c = RegisterScreen;\nexport default RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["useState","useEffect","Link","useNavigate","useLocation","useParams","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","register","jsxDEV","_jsxDEV","RegisterScreen","_s","userId","name","setName","email","setEmail","isAdmin","setAdmin","dispatch","userDetails","state","error","loading","user","navigate","submitHandler","e","preventDefault","children","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","className","Label","Control","type","placeholder","value","onChange","target","Check","label","checked","_c","$RefreshReg$"],"sources":["/Users/darshit/Documents/projects/ecom/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link, useNavigate, useLocation, useParams } from 'react-router-dom'\nimport {  Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { FormContainer } from '../components/FormContainer' \nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = () => {\n\n    const userId:id = useParams();\n\n    const [name, setName ] = useState('');\n    const [email, setEmail ] = useState('');\n    const [isAdmin, setAdmin ] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails;\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n    },[]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n    }\n\n    return (\n    <div>\n        <Link to='/admin/userlist'>\n           Go Back\n        </Link>\n\n\n        <FormContainer>\n            <h1>Edit User</h1>\n            {loading ? <Loader />: error ? (<Message variant='danger'>{error}</Message>):(\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name' className='my-2'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter your Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n    \n                    <Form.Group controlId='email' className='my-2'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n    \n                    <Form.Group controlId='isadmin'>\n                        <Form.Check\n                            type='checkbox'\n                            label='Is Admin'\n                            checked={isAdmin}\n                            onChange={(e) => setAdmin(e.target.checked)}\n                        ></Form.Check>\n                    </Form.Group>\n    \n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            )}\n        </FormContainer>\n    </div>\n    );\n}\n \nexport default RegisterScreen;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC5E,SAAUC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,QAAQ,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAMC,MAAS,GAAGf,SAAS,EAAE;EAE7B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAE,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAE,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACyB,OAAO,EAAEC,QAAQ,CAAE,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE5C,MAAM2B,QAAQ,GAAGjB,WAAW,EAAE;EAE9B,MAAMkB,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,WAAW,CAAC;EAC3D,MAAM;IAAEE,KAAK;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGJ,WAAW;EAE5C,MAAMK,QAAQ,GAAG9B,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMiC,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;EAEtB,CAAC;EAED,oBACAnB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA,CAACf,IAAI;MAACoC,EAAE,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAE3B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAGPzB,OAAA,CAACH,aAAa;MAAAuB,QAAA,gBACVpB,OAAA;QAAAoB,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACjBX,OAAO,gBAAGd,OAAA,CAACL,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,GAAEZ,KAAK,gBAAIb,OAAA,CAACJ,OAAO;QAAC8B,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAEP;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW,gBACvEzB,OAAA,CAACX,IAAI;QAACsC,QAAQ,EAAEV,aAAc;QAAAG,QAAA,gBAC1BpB,OAAA,CAACX,IAAI,CAACuC,KAAK;UAACC,SAAS,EAAC,MAAM;UAACC,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACzCpB,OAAA,CAACX,IAAI,CAAC0C,KAAK;YAAAX,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAa,eACtCzB,OAAA,CAACX,IAAI,CAAC2C,OAAO;YACTC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,iBAAiB;YAC7BC,KAAK,EAAE/B,IAAK;YACZgC,QAAQ,EAAGlB,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACmB,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eAEbzB,OAAA,CAACX,IAAI,CAACuC,KAAK;UAACC,SAAS,EAAC,OAAO;UAACC,SAAS,EAAC,MAAM;UAAAV,QAAA,gBAC1CpB,OAAA,CAACX,IAAI,CAAC0C,KAAK;YAAAX,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAa,eACtCzB,OAAA,CAACX,IAAI,CAAC2C,OAAO;YACTC,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC,aAAa;YACzBC,KAAK,EAAE7B,KAAM;YACb8B,QAAQ,EAAGlB,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACmB,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC9B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eAEbzB,OAAA,CAACX,IAAI,CAACuC,KAAK;UAACC,SAAS,EAAC,SAAS;UAAAT,QAAA,eAC3BpB,OAAA,CAACX,IAAI,CAACiD,KAAK;YACPL,IAAI,EAAC,UAAU;YACfM,KAAK,EAAC,UAAU;YAChBC,OAAO,EAAEhC,OAAQ;YACjB4B,QAAQ,EAAGlB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACmB,MAAM,CAACG,OAAO;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAClC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL,eAEbzB,OAAA,CAACV,MAAM;UAAC2C,IAAI,EAAC,QAAQ;UAACP,OAAO,EAAC,SAAS;UAAAN,QAAA,EAAC;QAExC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEhB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACd;AAEV,CAAC;AAAAvB,EAAA,CAxEKD,cAAc;EAAA,QAEEb,SAAS,EAMVK,WAAW,EAERC,WAAW,EAGdR,WAAW;AAAA;AAAAuD,EAAA,GAb1BxC,cAAc;AA0EpB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}